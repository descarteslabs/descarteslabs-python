syntax = "proto3";
package descarteslabs.discover.v0alpha;

import "google/protobuf/timestamp.proto";

///////////
// ASSET //
///////////

service AssetApi {
  rpc CreateAsset(CreateAssetRequest) returns (CreateAssetResponse);
  rpc GetAsset(GetAssetRequest) returns (GetAssetResponse);
  rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse);
  rpc MoveAsset(MoveAssetRequest) returns (MoveAssetResponse);
  rpc UpdateAsset(UpdateAssetRequest) returns (UpdateAssetResponse);
  rpc DeleteAsset(DeleteAssetRequest) returns (DeleteAssetResponse);
}
  
message Asset {
  // Resource name, a globally unique identifier for all assets in 
  // discover. 
  //
  // see: https://cloud.google.com/apis/design/resource_names.
  // 
  // This is the primary API handle for an asset.
  //
  // A Discover asset name has the form:
  // "asset/<TYPE>/<resource_name>"
  // where <resource_name> is globally unique under the respective <TYPE>.
  // 
  // In practice this should be the name/uri of the resource as designated 
  // by the hosting service for that particular type of resource. 
  //
  // For example, a blob asset name would look like:
  // "asset/blob/<BUCKET_ID>:key/for/file.txt"
  // where `<BUCKET_ID>:key/for/file.txt` is the resource name.
  //
  // Output only.
  string name = 2; 
  
  // A UUID or similar unique string that identifies this asset.
  // Output only.
  string id = 1;

  // Relative name of the parent asset if it exsists, else "-".
  // See above note reguarding assets with no parents.
  //
  // Output only. 
  // Note: move semantics with be handled separatly from update
  string parent_name = 3;
  
  // Name to be used in UI's
  string display_name = 4;
  
  // User facing description of asset
  string description = 5; 
  
  // Output only.
  google.protobuf.Timestamp create_time = 7;
  google.protobuf.Timestamp update_time = 8;

  // Whether or not a resource has been shared with another user
  bool shared = 10;
  
  // Resource this asset is representing to unicat
  // Note in the future this set would grow, currently
  // we only support storage.
  oneof resource {
    Blob blob = 11;
    Folder folder = 12;
    Namespace namespace = 13;
    ShareMount share_mount = 14;
    SymLink sym_link = 15;
  }
}
  
message CreateAssetRequest {
  Asset asset = 1;
}

message CreateAssetResponse {
  Asset asset = 1;
}

message GetAssetRequest {
  string asset_name = 1;
}

message GetAssetResponse {
  Asset asset = 1;
}

// Note that output only fields are ignored.
message UpdateAssetRequest {
  Asset asset = 1;
}

message UpdateAssetResponse {
  Asset asset = 1;
}

message ListAssetsRequest {
  // name of the parent asset
  // This is to support hierarichcal search in the 
  // future when we introduce directories. 
  // Set parent to "-" to search for assets with 
  // no parent.
  string parent_name = 1;

  // url query string, eg, "type=blob"
  string filter = 2;

  // These values do not need to be set,
  // if left empty the backend will set defaults.
  int32 page_size = 3;
  string page_token = 4;
}

message ListAssetsResponse {
  repeated Asset assets = 1;
  string next_page = 2;
}

message MoveAssetRequest {
    // name of the asset to move.
    string asset_name = 1;
    // name of the new parent asset.
    string destination_parent_name = 2;
}

message MoveAssetResponse {}

message DeleteAssetRequest {
  string asset_name = 1;
}

message DeleteAssetResponse {}


///////////
// BLOBS //
///////////

message Blob {
  // Blob name, globally unique, has the form: '<user_namespace_sha>:~/<key>'.
  string name = 1;

  // This will always be the uploader of the blob
  // Output Only
  string owner = 2;

  // Output Only 
  uint64 size_in_bytes = 3;
}

/////////////
// FOLDERS //
/////////////

message Folder  {
}

////////////////
// NAMESPACES //
////////////////

message Namespace {
}

/////////////////
// SHAREMOUNTS //
/////////////////

message ShareMount {
}

/////////////////
// SYMLINK //
/////////////////

message SymLink {
  // Name (asset name that is) of the referenced (target) asset. 
  // Output only.
  string target_name = 1;
}

///////////////////
// ACCESS GRANTS //
///////////////////

service AccessGrantApi {
  rpc CreateAccessGrant(CreateAccessGrantRequest) returns (CreateAccessGrantResponse);
  rpc DeleteAccessGrant(DeleteAccessGrantRequest) returns (DeleteAccessGrantResponse);
  rpc ListAccessGrants(ListAccessGrantsRequest) returns (ListAccessGrantsResponse);
  rpc ListAccessGrantsStream(ListAccessGrantsStreamRequest) returns (stream ListAccessGrantsStreamResponse);
  rpc ReplaceAccessGrant(ReplaceAccessGrantRequest) returns (ReplaceAccessGrantResponse);

  // TODO: add bulk create endpoint
}

message AccessGrant {
  // the thing you are sharing
  string asset_name = 3;

  // entity access is granted too
  Entity entity = 4;
 
  // Access granted, eg, "roles/viewer" or "roles/editor"
  string access = 5;
  
  // Output Only
  google.protobuf.Timestamp create_time = 6;
  google.protobuf.Timestamp update_time = 7;
  google.protobuf.Timestamp delete_time = 9 [deprecated = true];
} 

// Entity holding access to an asset
// Currently we only support "user-email" and "user-id".
message Entity {
  // Type of entity holding the permission, at present, only
  // valid option is `user-email`.
  //
  // In the future we might also support 
  // * `group-id`
  // * `allAuthenticatedUsers`
  // * `allUsers`
  string type = 1;

  // name of the entity, currently only an email address is valid 
  // for example: some_user@gmail.com
  string id = 2;
}

message CreateAccessGrantRequest {
  AccessGrant access_grant = 1;
}
  
message CreateAccessGrantResponse {
  AccessGrant access_grant = 1;
}

message GetAccessGrantRequest {
  // eg: asset/asset_id/acces_grant/access_grant_id
  string name = 1;
}
 
message GetAccessGrantResponse {
  AccessGrant access_grant = 1;
}

message DeleteAccessGrantRequest {
  AccessGrant access_grant = 1;
}
  
message DeleteAccessGrantResponse {
  bool revoked = 1;
}

message ListAccessGrantsRequest {
  string asset_name = 1;

  // These values do not need to be set,
  // if they are left empty the backend will 
  // set defaults.
  int32 page_size = 2;
  string page_token = 3;
}

message ListAccessGrantsResponse {
  repeated AccessGrant access_grants = 1;
  string next_page = 2;
}

message ListAccessGrantsStreamRequest {
  string asset_name = 1;
}

message ListAccessGrantsStreamResponse {
  AccessGrant access_grant = 1;
}

// Note you can not set fields marked 
// "Output Only", see above.
message ReplaceAccessGrantRequest {
  AccessGrant delete_access_grant = 1;
  AccessGrant create_access_grant = 2;
}

message ReplaceAccessGrantResponse {
  AccessGrant access_grant = 1;
}
